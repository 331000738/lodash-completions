{
    "scope": "source.js, source.coffee",
    "completions": [
        {
            "trigger": "ld()\t _ Seq",
            "contents": "_(${1:value})$0"
        },
        {
            "trigger": "cld()\t _ Seq",
            "contents": "(${1:value})$0"
        },
        {
            "trigger": "ld.chain()\t _ Seq",
            "contents": "_.chain(${1:value})$0"
        },
        {
            "trigger": "cld.chain()\t _ Seq",
            "contents": ".chain(${1:value})$0"
        },
        {
            "trigger": "ld.tap()\t _ Seq",
            "contents": "_.tap(${1:value}, ${2:interceptor})$0"
        },
        {
            "trigger": "cld.tap()\t _ Seq",
            "contents": ".tap(${1:value}, ${2:interceptor})$0"
        },
        {
            "trigger": "ld.thru()\t _ Seq",
            "contents": "_.thru(${1:value}, ${2:interceptor})$0"
        },
        {
            "trigger": "cld.thru()\t _ Seq",
            "contents": ".thru(${1:value}, ${2:interceptor})$0"
        },
        {
            "trigger": "ld.prototype[Symbol.iterator]()\t _ Seq",
            "contents": "_.prototype[Symbol.iterator]()$0"
        },
        {
            "trigger": "cld.prototype[Symbol.iterator]()\t _ Seq",
            "contents": ".prototype[Symbol.iterator]()$0"
        },
        {
            "trigger": "ld.prototype.at()\t _ Seq",
            "contents": "_.prototype.at(${1:[paths]})$0"
        },
        {
            "trigger": "cld.prototype.at()\t _ Seq",
            "contents": ".prototype.at(${1:[paths]})$0"
        },
        {
            "trigger": "ld.prototype.chain()\t _ Seq",
            "contents": "_.prototype.chain()$0"
        },
        {
            "trigger": "cld.prototype.chain()\t _ Seq",
            "contents": ".prototype.chain()$0"
        },
        {
            "trigger": "ld.prototype.commit()\t _ Seq",
            "contents": "_.prototype.commit()$0"
        },
        {
            "trigger": "cld.prototype.commit()\t _ Seq",
            "contents": ".prototype.commit()$0"
        },
        {
            "trigger": "ld.prototype.next()\t _ Seq",
            "contents": "_.prototype.next()$0"
        },
        {
            "trigger": "cld.prototype.next()\t _ Seq",
            "contents": ".prototype.next()$0"
        },
        {
            "trigger": "ld.prototype.plant()\t _ Seq",
            "contents": "_.prototype.plant(${1:value})$0"
        },
        {
            "trigger": "cld.prototype.plant()\t _ Seq",
            "contents": ".prototype.plant(${1:value})$0"
        },
        {
            "trigger": "ld.prototype.reverse()\t _ Seq",
            "contents": "_.prototype.reverse()$0"
        },
        {
            "trigger": "cld.prototype.reverse()\t _ Seq",
            "contents": ".prototype.reverse()$0"
        },
        {
            "trigger": "ld.prototype.value()\t _ Seq",
            "contents": "_.prototype.value()$0"
        },
        {
            "trigger": "ld.prototype.toJSON()\t _ Seq",
            "contents": "_.prototype.toJSON()$0"
        },
        {
            "trigger": "cld.prototype.toJSON()\t _ Seq",
            "contents": ".prototype.toJSON()$0"
        },
        {
            "trigger": "cld.prototype.value()\t _ Seq",
            "contents": ".prototype.value()$0"
        }
    ]
}