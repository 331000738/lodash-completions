{
    "scope": "source.js",
    "completions": [
        {
            "trigger": "ld.attempt(func)\t _ Util",
            "contents": "_.attempt(${1:func})$0"
        },
        {
            "trigger": "ld.bindAll(object, methodNames)\t _ Util",
            "contents": "_.bindAll(${1:object}, ${2:methodNames})$0"
        },
        {
            "trigger": "ld.cond(pairs)\t _ Util",
            "contents": "_.cond(${1:pairs})$0"
        },
        {
            "trigger": "ld.conforms(source)\t _ Util",
            "contents": "_.conforms(${1:source})$0"
        },
        {
            "trigger": "ld.constant(value)\t _ Util",
            "contents": "_.constant(${1:value})$0"
        },
        {
            "trigger": "ld.flow([funcs])\t _ Util",
            "contents": "_.flow(${1:[funcs]})$0"
        },
        {
            "trigger": "ld.flowRight([funcs])\t _ Util",
            "contents": "_.flowRight(${1:[funcs]})$0"
        },
        {
            "trigger": "ld.identity(value)\t _ Util",
            "contents": "_.identity(${1:value})$0"
        },
        {
            "trigger": "ld.iteratee([func=_.identity])\t _ Util",
            "contents": "_.iteratee(${1:[func=_.identity]})$0"
        },
        {
            "trigger": "ld.matches(source)\t _ Util",
            "contents": "_.matches(${1:source})$0"
        },
        {
            "trigger": "ld.matchesProperty(path, srcValue)\t _ Util",
            "contents": "_.matchesProperty(${1:path}, ${2:srcValue})$0"
        },
        {
            "trigger": "ld.method(path, [args])\t _ Util",
            "contents": "_.method(${1:path}, ${2:[args]})$0"
        },
        {
            "trigger": "ld.methodOf(object, [args])\t _ Util",
            "contents": "_.methodOf(${1:object}, ${2:[args]})$0"
        },
        {
            "trigger": "ld.mixin([object=lodash], source, [options])\t _ Util",
            "contents": "_.mixin([object=lodash], source, [options])$0"
        },
        {
            "trigger": "ld.noConflict()\t _ Util",
            "contents": "_.noConflict()$0"
        },
        {
            "trigger": "ld.noop()\t _ Util",
            "contents": "_.noop()$0"
        },
        {
            "trigger": "ld.nthArg([n=0])\t _ Util",
            "contents": "_.nthArg(${1:[n=0]})$0"
        },
        {
            "trigger": "ld.over(iteratees)\t _ Util",
            "contents": "_.over(${1:iteratees})$0"
        },
        {
            "trigger": "ld.overEvery(predicates)\t _ Util",
            "contents": "_.overEvery(${1:predicates})$0"
        },
        {
            "trigger": "ld.overSome(predicates)\t _ Util",
            "contents": "_.overSome(${1:predicates})$0"
        },
        {
            "trigger": "ld.property(path)\t _ Util",
            "contents": "_.property(${1:path})$0"
        },
        {
            "trigger": "ld.propertyOf(object)\t _ Util",
            "contents": "_.propertyOf(${1:object})$0"
        },
        {
            "trigger": "ld.range([start=0], end, [step=1])\t _ Util",
            "contents": "_.range(${1:[start=0]}, ${2:end}, ${3:[step=1]})$0"
        },
        {
            "trigger": "ld.rangeRight([start=0], end, [step=1])\t _ Util",
            "contents": "_.rangeRight(${1:[start=0]}, ${2:end}, ${3:[step=1]})$0"
        },
        {
            "trigger": "ld.runInContext([context=root])\t _ Util",
            "contents": "_.runInContext(${1:[context=root]})$0"
        },
        {
            "trigger": "ld.times(n, [iteratee=_.identity])\t _ Util",
            "contents": "_.times(n, [iteratee=_.identity])$0"
        },
        {
            "trigger": "ld.toPath(value)\t _ Util",
            "contents": "_.toPath(${1:value})$0"
        },
        {
            "trigger": "ld.uniqueId([prefix])\t _ Util",
            "contents": "_.uniqueId(${1:[prefix]})$0"
        }
    ]
}