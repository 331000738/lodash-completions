{
    "scope": "source.js, source.coffee",
    "completions": [
        {
            "trigger": "ld.camelCase()\t _ String",
            "contents": "_.camelCase(${1:[string='']})$0"
        },
        {
            "trigger": "cld.camelCase()\t _ String",
            "contents": ".camelCase(${1:[string='']})$0"
        },
        {
            "trigger": "ld.capitalize()\t _ String",
            "contents": "_.capitalize(${1:[string='']})$0"
        },
        {
            "trigger": "cld.capitalize()\t _ String",
            "contents": ".capitalize(${1:[string='']})$0"
        },
        {
            "trigger": "ld.deburr()\t _ String",
            "contents": "_.deburr(${1:[string='']})$0"
        },
        {
            "trigger": "cld.deburr()\t _ String",
            "contents": ".deburr(${1:[string='']})$0"
        },
        {
            "trigger": "ld.endsWith()\t _ String",
            "contents": "_.endsWith(${1:[string='']}, ${2:[target]}, ${3:[position=string.length]})$0"
        },
        {
            "trigger": "cld.endsWith()\t _ String",
            "contents": ".endsWith(${1:[string='']}, ${2:[target]}, ${3:[position=string.length]})$0"
        },
        {
            "trigger": "ld.escape()\t _ String",
            "contents": "_.escape(${1:[string='']})$0"
        },
        {
            "trigger": "cld.escape()\t _ String",
            "contents": ".escape(${1:[string='']})$0"
        },
        {
            "trigger": "ld.escapeRegExp()\t _ String",
            "contents": "_.escapeRegExp(${1:[string='']})$0"
        },
        {
            "trigger": "cld.escapeRegExp()\t _ String",
            "contents": ".escapeRegExp(${1:[string='']})$0"
        },
        {
            "trigger": "ld.kebabCase()\t _ String",
            "contents": "_.kebabCase(${1:[string='']})$0"
        },
        {
            "trigger": "cld.kebabCase()\t _ String",
            "contents": ".kebabCase(${1:[string='']})$0"
        },
        {
            "trigger": "ld.lowerCase()\t _ String",
            "contents": "_.lowerCase(${1:[string='']})$0"
        },
        {
            "trigger": "cld.lowerCase()\t _ String",
            "contents": ".lowerCase(${1:[string='']})$0"
        },
        {
            "trigger": "ld.lowerFirst()\t _ String",
            "contents": "_.lowerFirst(${1:[string='']})$0"
        },
        {
            "trigger": "cld.lowerFirst()\t _ String",
            "contents": ".lowerFirst(${1:[string='']})$0"
        },
        {
            "trigger": "ld.pad()\t _ String",
            "contents": "_.pad(${1:[string='']}, ${2:[length=0]}, ${3:[chars=' ']})$0"
        },
        {
            "trigger": "cld.pad()\t _ String",
            "contents": ".pad(${1:[string='']}, ${2:[length=0]}, ${3:[chars=' ']})$0"
        },
        {
            "trigger": "ld.padEnd()\t _ String",
            "contents": "_.padEnd(${1:[string='']}, ${2:[length=0]}, ${3:[chars=' ']})$0"
        },
        {
            "trigger": "cld.padEnd()\t _ String",
            "contents": ".padEnd(${1:[string='']}, ${2:[length=0]}, ${3:[chars=' ']})$0"
        },
        {
            "trigger": "ld.padStart()\t _ String",
            "contents": "_.padStart(${1:[string='']}, ${2:[length=0]}, ${3:[chars=' ']})$0"
        },
        {
            "trigger": "cld.padStart()\t _ String",
            "contents": ".padStart(${1:[string='']}, ${2:[length=0]}, ${3:[chars=' ']})$0"
        },
        {
            "trigger": "ld.parseInt()\t _ String",
            "contents": "_.parseInt(${1:string}, ${2:[radix=10]})$0"
        },
        {
            "trigger": "cld.parseInt()\t _ String",
            "contents": ".parseInt(${1:string}, ${2:[radix=10]})$0"
        },
        {
            "trigger": "ld.repeat()\t _ String",
            "contents": "_.repeat(${1:[string='']}, ${2:[n=1]})$0"
        },
        {
            "trigger": "cld.repeat()\t _ String",
            "contents": ".repeat(${1:[string='']}, ${2:[n=1]})$0"
        },
        {
            "trigger": "ld.replace()\t _ String",
            "contents": "_.replace(${1:[string='']}, ${2:pattern}, ${3:replacement})$0"
        },
        {
            "trigger": "cld.replace()\t _ String",
            "contents": ".replace(${1:[string='']}, ${2:pattern}, ${3:replacement})$0"
        },
        {
            "trigger": "ld.snakeCase()\t _ String",
            "contents": "_.snakeCase(${1:[string='']})$0"
        },
        {
            "trigger": "cld.snakeCase()\t _ String",
            "contents": ".snakeCase(${1:[string='']})$0"
        },
        {
            "trigger": "ld.split()\t _ String",
            "contents": "_.split(${1:[string='']}, ${2:separator}, ${3:[limit]})$0"
        },
        {
            "trigger": "cld.split()\t _ String",
            "contents": ".split(${1:[string='']}, ${2:separator}, ${3:[limit]})$0"
        },
        {
            "trigger": "ld.startCase()\t _ String",
            "contents": "_.startCase(${1:[string='']})$0"
        },
        {
            "trigger": "cld.startCase()\t _ String",
            "contents": ".startCase(${1:[string='']})$0"
        },
        {
            "trigger": "ld.startsWith()\t _ String",
            "contents": "_.startsWith(${1:[string='']}, ${2:[target]}, ${3:[position=0]})$0"
        },
        {
            "trigger": "cld.startsWith()\t _ String",
            "contents": ".startsWith(${1:[string='']}, ${2:[target]}, ${3:[position=0]})$0"
        },
        {
            "trigger": "ld.template()\t _ String",
            "contents": "_.template(${1:[string='']}, ${2:[options={}]})$0"
        },
        {
            "trigger": "cld.template()\t _ String",
            "contents": ".template(${1:[string='']}, ${2:[options={}]})$0"
        },
        {
            "trigger": "ld.toLower()\t _ String",
            "contents": "_.toLower(${1:[string='']})$0"
        },
        {
            "trigger": "cld.toLower()\t _ String",
            "contents": ".toLower(${1:[string='']})$0"
        },
        {
            "trigger": "ld.toUpper()\t _ String",
            "contents": "_.toUpper(${1:[string='']})$0"
        },
        {
            "trigger": "cld.toUpper()\t _ String",
            "contents": ".toUpper(${1:[string='']})$0"
        },
        {
            "trigger": "ld.trim()\t _ String",
            "contents": "_.trim(${1:[string='']}, ${2:[chars=whitespace]})$0"
        },
        {
            "trigger": "cld.trim()\t _ String",
            "contents": ".trim(${1:[string='']}, ${2:[chars=whitespace]})$0"
        },
        {
            "trigger": "ld.trimEnd()\t _ String",
            "contents": "_.trimEnd(${1:[string='']}, ${2:[chars=whitespace]})$0"
        },
        {
            "trigger": "cld.trimEnd()\t _ String",
            "contents": ".trimEnd(${1:[string='']}, ${2:[chars=whitespace]})$0"
        },
        {
            "trigger": "ld.trimStart()\t _ String",
            "contents": "_.trimStart(${1:[string='']}, ${2:[chars=whitespace]})$0"
        },
        {
            "trigger": "cld.trimStart()\t _ String",
            "contents": ".trimStart(${1:[string='']}, ${2:[chars=whitespace]})$0"
        },
        {
            "trigger": "ld.truncate()\t _ String",
            "contents": "_.truncate(${1:[string='']}, ${2:[options={}]})$0"
        },
        {
            "trigger": "cld.truncate()\t _ String",
            "contents": ".truncate(${1:[string='']}, ${2:[options={}]})$0"
        },
        {
            "trigger": "ld.unescape()\t _ String",
            "contents": "_.unescape(${1:[string='']})$0"
        },
        {
            "trigger": "cld.unescape()\t _ String",
            "contents": ".unescape(${1:[string='']})$0"
        },
        {
            "trigger": "ld.upperCase()\t _ String",
            "contents": "_.upperCase(${1:[string='']})$0"
        },
        {
            "trigger": "cld.upperCase()\t _ String",
            "contents": ".upperCase(${1:[string='']})$0"
        },
        {
            "trigger": "ld.upperFirst()\t _ String",
            "contents": "_.upperFirst(${1:[string='']})$0"
        },
        {
            "trigger": "cld.upperFirst()\t _ String",
            "contents": ".upperFirst(${1:[string='']})$0"
        },
        {
            "trigger": "ld.words()\t _ String",
            "contents": "_.words(${1:[string='']}, ${2:[pattern]})$0"
        },
        {
            "trigger": "cld.words()\t _ String",
            "contents": ".words(${1:[string='']}, ${2:[pattern]})$0"
        }
    ]
}